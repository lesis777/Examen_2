{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/Desktop/Examen2/nfl/src/components/TPRIDTitle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TPRIDTitle = () => {\n  _s();\n  const [resolvedTodos, setResolvedTodos] = useState([]);\n  useEffect(() => {\n    const fetchResolvedTodos = async () => {\n      try {\n        const response = await axios.get('http://jsonplaceholder.typicode.com/todos');\n        const resolvedTodos = response.data.filter(todo => todo.completed);\n        setResolvedTodos(resolvedTodos);\n      } catch (error) {\n        console.error('Error fetching resolved todos:', error);\n      }\n    };\n    fetchResolvedTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      color: 'orange'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .resolved-todos-info {\n            margin-bottom: 20px;\n          }\n\n          .resolved-todos-list {\n            list-style-type: none;\n            padding: 0;\n          }\n\n          .resolved-todos-list li {\n            margin-bottom: 8px;\n            background-color: #c35900; /* Color naranja para todas las celdas */\n            padding: 10px;\n            border-radius: 5px;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Borde sombreado para el brillo */\n          }\n\n          .resolved-todos-list li:last-child {\n            margin-bottom: 0;\n          }\n\n          .resolved-todos-list li:hover {\n            background-color: black; /* Cambio de color al pasar el cursor */\n            color: white; /* Texto blanco al pasar el cursor */\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: '30px 0'\n      },\n      children: \"Lista de todos los pendientes resueltos (ID y T\\xEDtulo)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resolved-todos-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ID y T\\xEDtulo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"resolved-todos-list\",\n        children: resolvedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"ID: \", todo.id, \", T\\xEDtulo: \", todo.title]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TPRIDTitle, \"st3biM31sVwjbtFPW3KtK/f9j8s=\");\n_c = TPRIDTitle;\nexport default TPRIDTitle;\nvar _c;\n$RefreshReg$(_c, \"TPRIDTitle\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TPRIDTitle","_s","resolvedTodos","setResolvedTodos","fetchResolvedTodos","response","get","data","filter","todo","completed","error","console","style","textAlign","color","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","className","map","id","title","_c","$RefreshReg$"],"sources":["/home/vboxuser/Desktop/Examen2/nfl/src/components/TPRIDTitle.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TPRIDTitle = () => {\n  const [resolvedTodos, setResolvedTodos] = useState([]);\n\n  useEffect(() => {\n    const fetchResolvedTodos = async () => {\n      try {\n        const response = await axios.get('http://jsonplaceholder.typicode.com/todos');\n        const resolvedTodos = response.data.filter(todo => todo.completed);\n        setResolvedTodos(resolvedTodos);\n      } catch (error) {\n        console.error('Error fetching resolved todos:', error);\n      }\n    };\n\n    fetchResolvedTodos();\n  }, []);\n\n  return (\n    <div style={{ textAlign: 'center', color: 'orange' }}>\n      <style>\n        {`\n          .resolved-todos-info {\n            margin-bottom: 20px;\n          }\n\n          .resolved-todos-list {\n            list-style-type: none;\n            padding: 0;\n          }\n\n          .resolved-todos-list li {\n            margin-bottom: 8px;\n            background-color: #c35900; /* Color naranja para todas las celdas */\n            padding: 10px;\n            border-radius: 5px;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Borde sombreado para el brillo */\n          }\n\n          .resolved-todos-list li:last-child {\n            margin-bottom: 0;\n          }\n\n          .resolved-todos-list li:hover {\n            background-color: black; /* Cambio de color al pasar el cursor */\n            color: white; /* Texto blanco al pasar el cursor */\n          }\n        `}\n      </style>\n      <h2 style={{ margin: '30px 0' }}>Lista de todos los pendientes resueltos (ID y Título)</h2>\n      <div className=\"resolved-todos-info\">\n        <p>ID y Título:</p>\n        <ul className=\"resolved-todos-list\">\n          {resolvedTodos.map(todo => (\n            <li key={todo.id}>ID: {todo.id}, Título: {todo.title}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TPRIDTitle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMQ,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,2CAA2C,CAAC;QAC7E,MAAMJ,aAAa,GAAGG,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;QAClEP,gBAAgB,CAACD,aAAa,CAAC;MACjC,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDP,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKc,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnDjB,OAAA;MAAAiB,QAAA,EACI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACRrB,OAAA;MAAIc,KAAK,EAAE;QAAEQ,MAAM,EAAE;MAAS,CAAE;MAAAL,QAAA,EAAC;IAAqD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3FrB,OAAA;MAAKuB,SAAS,EAAC,qBAAqB;MAAAN,QAAA,gBAClCjB,OAAA;QAAAiB,QAAA,EAAG;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnBrB,OAAA;QAAIuB,SAAS,EAAC,qBAAqB;QAAAN,QAAA,EAChCd,aAAa,CAACqB,GAAG,CAACd,IAAI,iBACrBV,OAAA;UAAAiB,QAAA,GAAkB,MAAI,EAACP,IAAI,CAACe,EAAE,EAAC,eAAU,EAACf,IAAI,CAACgB,KAAK;QAAA,GAA3ChB,IAAI,CAACe,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyC,CAC1D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3DID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AA6DhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}